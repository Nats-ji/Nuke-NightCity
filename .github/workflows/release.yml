name: Release
on:
  release:
      types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Set environment variables
        uses: antifree/json-to-variables@v1.0.1
        with:
          filename: metadata.json
          prefix: META

      - name: Set Release version to environment variables
        run: echo "META_RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Copy files
        run: |
          mkdir -p ./build/tmp/bin/x64/plugins/cyber_engine_tweaks/mods/ ./build/release/
          rsync -a ./ ./build/tmp/bin/x64/plugins/cyber_engine_tweaks/mods/nuke_nightcity/ --exclude={.git/,build/,.gitignore,.github/,README.md,README_zh.md,metadata.json}
      - name: Zip Release
        uses: TheDoctor0/zip-release@0.4.1
        with:
          filename: ../release/${{ env.META_MOD_FILE_NAME }}_${{ env.META_RELEASE_VERSION }}.zip
          directory: ./build/tmp/

      - name: Update Github release file
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          omitNameDuringUpdate: true
          omitBodyDuringUpdate: true
          artifacts: "./build/release/${{ env.META_MOD_FILE_NAME }}_${{ env.META_RELEASE_VERSION }}.zip"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Nexus Mods release file
        env:
          UNEX_APIKEY: ${{ secrets.UNEX_APIKEY }}
          UNEX_COOKIES: ${{ secrets.UNEX_COOKIES }}
          UNEX_GAME: ${{ env.META_UNEX_GAME }}
          UNEX_MODID: ${{ env.META_UNEX_MODID }}
          UNEX_PREVIOUSFILE: auto
          UNEX_FILENAME: ${{ env.META_MOD_FILE_NAME }}_${{ env.META_RELEASE_VERSION }}.zip
          UNEX_FILEDESCRIPTION: ${{ env.META_UNEX_FILEDESCRIPTION }}
          UNEX_FILEPATH: ./build/release/${{ env.META_MOD_FILE_NAME }}_${{ env.META_RELEASE_VERSION }}.zip
          UNEX_VERSION: ${{ env.META_RELEASE_VERSION }}
        run: |
          dotnet tool install -g NexusUploader
          unex upload $UNEX_MODID $UNEX_FILEPATH -v $UNEX_VERSION

      - name: Update 3DM Mods release file
        id: upload_3dm
        uses: Nats-ji/3dm-release-action@master
        with:
          appid: ${{ secrets.APPID_3DM }}
          appkey: ${{ secrets.APPKEY_3DM }}
          mod_id: ${{ env.META_3DM_MOD_ID }}
          mod_title: ${{ env.META_3DM_MOD_TITLE }}
          mod_version: ${{ env.META_RELEASE_VERSION }}
          mod_tags: ${{ env.META_3DM_MOD_TAGS }}
          mod_desc: ${{ env.META_3DM_MOD_DESC }}
          mod_content: ${{ env.META_3DM_MOD_CONTENT }}
          mod_filepath: ./build/release/${{ env.META_MOD_FILE_NAME }}_${{ env.META_RELEASE_VERSION }}.zip

      - name: Check 3DM upload status
        run: echo ${{ steps.upload_3dm.outputs.RESPONSE }}
